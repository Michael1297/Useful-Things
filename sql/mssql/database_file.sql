-- Запрос для получения информации о файлах базы данных ELARContext
SELECT
    name AS LogicalFileName, -- Логическое имя файла базы данных (например, ELARContext или ELARContext_log).
    type_desc AS FileType,   -- Тип файла: ROWS (данные) или LOG (журнал транзакций).
    physical_name AS FilePath -- Физический путь к файлу на диске (например, C:\Data\ELARContext.mdf).
FROM sys.master_files        -- Системное представление, содержащее информацию о всех файлах баз данных.
WHERE database_id = DB_ID('ELARContext'); -- Фильтруем файлы только для базы данных ELARContext.


-- Автоматическое увеличение размера файла
ALTER DATABASE [ELARContext] -- Указывает базу данных, для которой изменяются параметры файла.
    MODIFY FILE (
        NAME = 'ELARContext',   -- Логическое имя файла, для которого изменяются параметры.
        -- Это имя нужно взять из результатов первого запроса (например, из sys.master_files).
        MAXSIZE = UNLIMITED,    -- Устанавливает максимальный размер файла как неограниченный.
        -- Файл может расти до тех пор, пока на диске есть свободное место.
        FILEGROWTH = 10%        -- Указывает шаг автоматического роста файла.
        -- В данном случае файл будет увеличиваться на 10% от текущего размера каждый раз, когда заканчивается место.
        );


-- Запрос для получения информации о файловых группах и файлах базы данных, включая их размеры и использование пространства
SELECT
    fg.name AS FileGroupName, -- Имя файловой группы, к которой принадлежит файл (если файл данных).
    -- Для файлов журнала транзакций (LOG) это значение будет NULL.
    f.name AS FileName,       -- Логическое имя файла базы данных (например, ELARContext или ELARContext_log).

    -- Общий размер файла в мегабайтах (МБ).
    -- Size хранится в 8-килобайтных страницах, поэтому умножаем на 8 (чтобы получить килобайты) и делим на 1024 (чтобы получить мегабайты).
    CAST(f.size * 8 / 1024.0 AS DECIMAL(10, 2)) AS TotalMB,

    -- Используемое пространство в файле в мегабайтах (МБ).
    -- FILEPROPERTY(f.name, 'SpaceUsed') возвращает количество используемых 8-килобайтных страниц в файле.
    CAST(FILEPROPERTY(f.name, 'SpaceUsed') * 8 / 1024.0 AS DECIMAL(10, 2)) AS UsedMB,

    -- Свободное пространство в файле в мегабайтах (МБ).
    -- Вычисляется как разница между общим размером файла и используемым пространством.
    CAST((f.size - FILEPROPERTY(f.name, 'SpaceUsed')) * 8 / 1024.0 AS DECIMAL(10, 2)) AS FreeMB
FROM sys.database_files f -- Системное представление, содержащее информацию о файлах текущей базы данных.
         LEFT JOIN sys.filegroups fg ON f.data_space_id = fg.data_space_id; -- Присоединяем файловые группы для файлов данных.


-- Проверка размера файлов и настроек автогроу (автоматического роста)
SELECT
    name AS FileName, -- Логическое имя файла базы данных (например, ELARContext или ELARContext_log).
    type_desc AS FileType, -- Тип файла: ROWS (данные) или LOG (журнал транзакций).

    -- Текущий размер файла в мегабайтах (МБ).
    -- Size хранится в 8-килобайтных страницах, поэтому умножаем на 8 (чтобы получить килобайты) и делим на 1024 (чтобы получить мегабайты).
    CAST(size AS BIGINT) * 8 / 1024 AS SizeMB,

    -- Максимальный размер файла в мегабайтах (МБ).
    -- Если max_size = -1, это означает, что размер файла не ограничен (UNLIMITED).
    -- В противном случае переводим значение max_size из 8-килобайтных страниц в мегабайты.
    CASE
        WHEN max_size = -1 THEN -1 -- Неограниченный размер
        ELSE CAST(max_size AS BIGINT) * 8 / 1024
        END AS MaxSizeMB,

    -- Шаг роста файла (FILEGROWTH).
    -- Если is_percent_growth = 1, то growth указывает процент от текущего размера файла.
    -- Если is_percent_growth = 0, то growth указывает фиксированное значение в мегабайтах.
    CASE
        WHEN is_percent_growth = 1 THEN growth -- Рост в процентах
        ELSE CAST(growth AS BIGINT) * 8 / 1024 -- Рост в мегабайтах
        END AS GrowthMB,

    is_percent_growth, -- Флаг, указывающий, является ли FILEGROWTH процентным (1) или фиксированным (0).

    physical_name AS FilePath -- Физический путь к файлу на диске (например, C:\Data\ELARContext.mdf).
FROM sys.master_files
WHERE database_id = DB_ID('ELARContext'); -- Фильтруем файлы только для базы данных ELARContext.


-- Запрос для получения информации о файловых группах и файлах базы данных ELARContext,
-- включая их размеры и свободное пространство.
SELECT
    fg.name AS FileGroupName, -- Имя файловой группы, к которой принадлежит файл.
    -- Файловые группы используются для логической организации файлов данных.
    f.name AS FileName,        -- Логическое имя файла базы данных (например, ELARContext или ELARContext_log).

    -- Общий размер файла в мегабайтах (МБ).
    -- size хранится в 8-килобайтных страницах, поэтому умножаем на 8 (чтобы получить килобайты) и делим на 1024 (чтобы получить мегабайты).
    f.size * 8 / 1024 AS SizeMB,

    -- Свободное пространство в файле в мегабайтах (МБ).
    -- Вычисляется как разница между общим размером файла и используемым пространством.
    -- FILEPROPERTY(f.name, 'SpaceUsed') возвращает количество используемых 8-килобайтных страниц в файле.
    f.size * 8 / 1024 - CAST(FILEPROPERTY(f.name, 'SpaceUsed') AS INT) * 8 / 1024 AS FreeSpaceMB
FROM sys.filegroups fg -- Системное представление, содержащее информацию о файловых группах текущей базы данных.
         JOIN sys.master_files f ON fg.data_space_id = f.data_space_id -- Присоединяем файлы, связанные с файловыми группами.
WHERE f.database_id = DB_ID('ELARContext'); -- Фильтруем файлы только для базы данных ELARContext.